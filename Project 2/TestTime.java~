import junit.framework.TestCase;

/**
 * A JUnit test case class to test the functionality of the Time class.
 * @author Ivan Evtimov
 */
public class TestTime extends TestCase {
  
  /**
   * A test method to test the exception handling of the constructor.
   */
  public void testConstructor1() {
    
    try{
      
      //this should cause an exception
      Time t = new Time("");
      fail("Exception went uncaught or was not thrown!");
    } catch (Exception e){
      //test succeeds
    }
    
  }
  
    
  /**
   * A second test method to test the exception handling of the constructor.
   */
  public void testConstructor2() {
    
    try{
      
      //this should cause an exception
      Time t = new Time("2:59");
      fail("Exception went uncaught or was not thrown!");
    } catch (Exception e){
      //test succeeds
    }
    
  }
  
  
  /**
   * A third test method to test the exception handling of the constructor.
   */
  public void testConstructor3() {
    
    try{
      
      //this should cause an exception
      Time t = new Time("02:69");
      fail("Exception went uncaught or was not thrown!");
    } catch (Exception e){
      //test succeeds
    }
    
  }
  
    /**
   * A fourth test method to test the exception handling of the constructor.
   */
  public void testConstructor4() {
    
    try{
      
      //this should cause an exception
      Time t = new Time("34:39");
      fail("Exception went uncaught or was not thrown!");
    } catch (Exception e){
      //test succeeds
    }
    
  }
  
    /**
   * A fifth test method to test the exception handling of the constructor.
   */
  public void testConstructor5() {
    
    try{
      
      //this shouldn't cause an exception
      Time t = new Time("01:46");
      
    } catch (Exception e){
      //test fails
      fail("Exception was thrown when there wasn't supposed to be any!");
    }
    
  }
  
  /**
   * This is the first in a series of methods to test whether the time class
   * correctly identifies if a given time is between two other times.
   */
  public void testIsBetween1(){
    
    //create some times
    Time t1 = new Time("17:00");
    Time t2 = new Time("18:00");
    Time t3 = new Time("17:30");
    Time t4 = new Time("18:01");
    
    //now t3 should be between t1 and t2
    assertTrue("isBetween with t3 fails!", t3.isBetween(t1, t2));
    assertFalse("reversed with t3 fails", t3.isBetween(t2, t1));//the negation of the one above
    
    //t4 should be outside t1 and t2
    assertTrue("reversed with t4 fails", t4.isBetween(t2, t1));//the negation of the one below
    assertFalse("isBetween with t4 fails", t4.isBetween(t1, t2));
    
    //also, anything should be between the time perido 17:00 to 17:00
    assertTrue("t1.isBetween(t1, t1) fails", t1.isBetween(t1, t1));
    assertTrue("t2.isBetween(t1, t1) fails", t2.isBetween(t1, t1));
  }
  
  /**
   * A second test method for the functionality of the isBetween class. 
   * This one deals with times with the same hours.
   */
  public void testIsBetween2(){
  
     //create some times (all with the same hours)
    Time t1 = new Time("17:00");
    Time t2 = new Time("17:20");
    Time t3 = new Time("17:30");
    Time t4 = new Time("17:00");
    
    assertTrue("t2 between t1 and t3", t2.isBetween(t1, t3));
    assertFalse("negation of t2 between t1 and t3", t2.isBetween(t3, t1));//negation of one above
    
    assertTrue("t4 between t1 and t3", t4.isBetween(t1, t3));
    assertTrue("t4 between t3 and t1", t4.isBetween(t3, t1));
    
    
  }
}
